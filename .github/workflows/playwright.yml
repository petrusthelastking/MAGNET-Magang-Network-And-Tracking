name: Playwright Tests

on:
  push:
    branches: [ main, Testing-Petrus, development ]
  pull_request:
    branches: [ main, Testing-Petrus ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: magnet
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_ROOT_PASSWORD: ""
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: local
      APP_DEBUG: false
      APP_URL: http://127.0.0.1:8000
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: magnet
      DB_USERNAME: root
      DB_PASSWORD:
      CACHE_DRIVER: file
      SESSION_DRIVER: file
      QUEUE_CONNECTION: sync
      BROADCAST_DRIVER: log
      MAIL_MAILER: log

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer:v2
          extensions: mbstring, intl, dom, fileinfo, pdo_mysql, zip, curl
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci

      - name: Build assets (Vite)
        run: npm run build --if-present

      - name: Create .env and app key
        run: |
          cp .env.example .env
          sed -i 's/^APP_ENV=.*/APP_ENV=local/' .env || true
          sed -i 's|^APP_URL=.*|APP_URL=http://127.0.0.1:8000|' .env || true
          sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env || true
          sed -i 's/^DB_HOST=.*/DB_HOST=127.0.0.1/' .env || true
          sed -i 's/^DB_PORT=.*/DB_PORT=3306/' .env || true
          sed -i 's/^DB_DATABASE=.*/DB_DATABASE=magnet/' .env || true
          sed -i 's/^DB_USERNAME=.*/DB_USERNAME=root/' .env || true
          sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=/' .env || true
          sed -i 's/^CACHE_DRIVER=.*/CACHE_DRIVER=file/' .env || true
          sed -i 's/^SESSION_DRIVER=.*/SESSION_DRIVER=file/' .env || true
          sed -i 's/^QUEUE_CONNECTION=.*/QUEUE_CONNECTION=sync/' .env || true
          php artisan key:generate
          php artisan config:clear

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" --silent; then
              echo "✓ MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: Run migrations and seeders
        run: php artisan migrate:fresh --seed --force

      - name: Start Laravel server
        run: php artisan serve --host=127.0.0.1 --port=8000 &

      - name: Wait for app to be up
        run: |
          echo "Waiting for Laravel server..."
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8000 > /dev/null; then
              echo "✓ Laravel server is ready!"
              break
            fi
            echo "Waiting for server... ($i/30)"
            sleep 2
          done
          curl -I http://127.0.0.1:8000 || echo "Warning: Server check failed"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
